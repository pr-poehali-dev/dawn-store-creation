import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import Icon from "@/components/ui/icon";
import type { Product } from "@/pages/Index";

interface ProductGridProps {
  onAddToCart: (product: Product) => void;
}

const mockProducts: Product[] = [
  // –û–≤–æ—â–∏
  {
    id: 1,
    name: "–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏",
    price: 180,
    category: "–û–≤–æ—â–∏",
    image: "/placeholder.svg",
    isNew: true,
  },
  {
    id: 2,
    name: "–û–≥—É—Ä—Ü—ã —Å–≤–µ–∂–∏–µ",
    price: 120,
    category: "–û–≤–æ—â–∏",
    image: "/placeholder.svg",
  },
  {
    id: 3,
    name: "–ú–æ—Ä–∫–æ–≤—å",
    price: 85,
    category: "–û–≤–æ—â–∏",
    image: "/placeholder.svg",
    discount: 10,
  },
  // –§—Ä—É–∫—Ç—ã
  {
    id: 4,
    name: "–Ø–±–ª–æ–∫–∏ –ê–Ω—Ç–æ–Ω–æ–≤–∫–∞",
    price: 120,
    category: "–§—Ä—É–∫—Ç—ã",
    image: "/placeholder.svg",
  },
  {
    id: 5,
    name: "–ë–∞–Ω–∞–Ω—ã",
    price: 95,
    category: "–§—Ä—É–∫—Ç—ã",
    image: "/placeholder.svg",
  },
  {
    id: 6,
    name: "–ê–ø–µ–ª—å—Å–∏–Ω—ã",
    price: 140,
    category: "–§—Ä—É–∫—Ç—ã",
    image: "/placeholder.svg",
    discount: 15,
  },
  // –ú–æ–ª–æ—á–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è
  {
    id: 7,
    name: "–ú–æ–ª–æ–∫–æ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–µ 3.2%",
    price: 89,
    category: "–ú–æ–ª–æ—á–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è",
    image: "/placeholder.svg",
    isNew: true,
  },
  {
    id: 8,
    name: "–¢–≤–æ—Ä–æ–≥ –¥–æ–º–∞—à–Ω–∏–π 9%",
    price: 145,
    category: "–ú–æ–ª–æ—á–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è",
    image: "/placeholder.svg",
    discount: 20,
  },
  {
    id: 9,
    name: "–°–º–µ—Ç–∞–Ω–∞ 20%",
    price: 125,
    category: "–ú–æ–ª–æ—á–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è",
    image: "/placeholder.svg",
  },
  // –ú—è—Å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è
  {
    id: 10,
    name: "–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ –æ—Ö–ª–∞–∂–¥–µ–Ω–Ω–æ–µ",
    price: 350,
    category: "–ú—è—Å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è",
    image: "/placeholder.svg",
  },
  {
    id: 11,
    name: "–ì–æ–≤—è–¥–∏–Ω–∞ –≤—ã—Ä–µ–∑–∫–∞",
    price: 680,
    category: "–ú—è—Å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è",
    image: "/placeholder.svg",
  },
  // –ö–æ–ª–±–∞—Å–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è
  {
    id: 12,
    name: "–ö–æ–ª–±–∞—Å–∞ –î–æ–∫—Ç–æ—Ä—Å–∫–∞—è",
    price: 320,
    category: "–ö–æ–ª–±–∞—Å–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
    image: "/placeholder.svg",
  },
  {
    id: 13,
    name: "–°–æ—Å–∏—Å–∫–∏ –ú–æ–ª–æ—á–Ω—ã–µ",
    price: 280,
    category: "–ö–æ–ª–±–∞—Å–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
    image: "/placeholder.svg",
    discount: 12,
  },
  // –†—ã–±–∞
  {
    id: 14,
    name: "–°–µ–º–≥–∞ —Å–ª–∞–±–æ—Å–æ–ª–µ–Ω–∞—è",
    price: 890,
    category: "–†—ã–±–∞",
    image: "/placeholder.svg",
  },
  {
    id: 15,
    name: "–°–∫—É–º–±—Ä–∏—è –∫–æ–ø—á–µ–Ω–∞—è",
    price: 245,
    category: "–†—ã–±–∞",
    image: "/placeholder.svg",
  },
  // –•–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è
  {
    id: 16,
    name: "–•–ª–µ–± —Ä–∂–∞–Ω–æ–π —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤–æ–π",
    price: 65,
    category: "–•–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
    image: "/placeholder.svg",
    discount: 15,
  },
  {
    id: 17,
    name: "–ë–∞—Ç–æ–Ω –Ω–∞—Ä–µ–∑–Ω–æ–π",
    price: 45,
    category: "–•–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
    image: "/placeholder.svg",
  },
  // –í—ã–ø–µ—á–∫–∞
  {
    id: 18,
    name: "–ö—Ä—É–∞—Å—Å–∞–Ω—ã —Å —à–æ–∫–æ–ª–∞–¥–æ–º",
    price: 180,
    category: "–í—ã–ø–µ—á–∫–∞",
    image: "/placeholder.svg",
    isNew: true,
  },
  {
    id: 19,
    name: "–ë—É–ª–æ—á–∫–∏ —Å –º–∞–∫–æ–º",
    price: 35,
    category: "–í—ã–ø–µ—á–∫–∞",
    image: "/placeholder.svg",
  },
  // –ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–µ –∏–∑–¥–µ–ª–∏—è
  {
    id: 20,
    name: "–¢–æ—Ä—Ç –ù–∞–ø–æ–ª–µ–æ–Ω",
    price: 450,
    category: "–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–µ –∏–∑–¥–µ–ª–∏—è",
    image: "/placeholder.svg",
  },
  {
    id: 21,
    name: "–ü–µ—á–µ–Ω—å–µ –æ–≤—Å—è–Ω–æ–µ",
    price: 120,
    category: "–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–µ –∏–∑–¥–µ–ª–∏—è",
    image: "/placeholder.svg",
    discount: 25,
  },
  // –ú–æ—Ä–æ–∂–µ–Ω–æ–µ
  {
    id: 22,
    name: "–ú–æ—Ä–æ–∂–µ–Ω–æ–µ –ü–ª–æ–º–±–∏—Ä",
    price: 89,
    category: "–ú–æ—Ä–æ–∂–µ–Ω–æ–µ",
    image: "/placeholder.svg",
  },
  {
    id: 23,
    name: "–≠—Å–∫–∏–º–æ –≤ —à–æ–∫–æ–ª–∞–¥–µ",
    price: 65,
    category: "–ú–æ—Ä–æ–∂–µ–Ω–æ–µ",
    image: "/placeholder.svg",
  },
  // –ü–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç—ã
  {
    id: 24,
    name: "–ü–µ–ª—å–º–µ–Ω–∏ –¥–æ–º–∞—à–Ω–∏–µ",
    price: 285,
    category: "–ü–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç—ã",
    image: "/placeholder.svg",
  },
  {
    id: 25,
    name: "–ö–æ—Ç–ª–µ—Ç—ã –∫—É—Ä–∏–Ω—ã–µ",
    price: 320,
    category: "–ü–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç—ã",
    image: "/placeholder.svg",
  },
  // –ü—Ä–æ–¥—É–∫—Ç—ã –∏–∑ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞
  {
    id: 26,
    name: "–ö–∞–∑–∞—Ö—Å–∫–∏–π –∫—É—Ä—Ç",
    price: 150,
    category: "–ü—Ä–æ–¥—É–∫—Ç—ã –∏–∑ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞",
    image: "/placeholder.svg",
    isNew: true,
  },
  {
    id: 27,
    name: "–ë–∞—É—Ä—Å–∞–∫–∏",
    price: 95,
    category: "–ü—Ä–æ–¥—É–∫—Ç—ã –∏–∑ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞",
    image: "/placeholder.svg",
  },
  // –ë–∞–∫–∞–ª–µ—è
  {
    id: 28,
    name: "–ì—Ä–µ—á–∞ —è–¥—Ä–∏—Ü–∞",
    price: 110,
    category: "–ë–∞–∫–∞–ª–µ—è",
    image: "/placeholder.svg",
  },
  {
    id: 29,
    name: "–ú–∞—Å–ª–æ –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–æ–µ",
    price: 165,
    category: "–ë–∞–∫–∞–ª–µ—è",
    image: "/placeholder.svg",
    discount: 18,
  },
  {
    id: 30,
    name: "–ú–∞–∫–∞—Ä–æ–Ω—ã —Å–ø–∞–≥–µ—Ç—Ç–∏",
    price: 85,
    category: "–ë–∞–∫–∞–ª–µ—è",
    image: "/placeholder.svg",
  },
];

const categories = [
  "–í—Å–µ —Ç–æ–≤–∞—Ä—ã",
  "–û–≤–æ—â–∏",
  "–§—Ä—É–∫—Ç—ã",
  "–ü–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç—ã",
  "–ú–æ—Ä–æ–∂–µ–Ω–æ–µ",
  "–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–µ –∏–∑–¥–µ–ª–∏—è",
  "–†—ã–±–∞",
  "–ú–æ–ª–æ—á–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è",
  "–ú—è—Å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è",
  "–ö–æ–ª–±–∞—Å–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
  "–í—ã–ø–µ—á–∫–∞",
  "–•–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
  "–ü—Ä–æ–¥—É–∫—Ç—ã –∏–∑ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞",
  "–ë–∞–∫–∞–ª–µ—è",
];

const ProductGrid = ({ onAddToCart }: ProductGridProps) => {
  return (
    <div>
      {/* Categories */}
      <div className="mb-8">
        <h2 className="text-2xl font-semibold text-gray-900 mb-4 font-rubik">
          –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
        </h2>
        <div className="flex flex-wrap gap-3">
          {categories.map((category) => (
            <Button
              key={category}
              variant={category === "–í—Å–µ —Ç–æ–≤–∞—Ä—ã" ? "default" : "outline"}
              className="rounded-full"
            >
              {category}
            </Button>
          ))}
        </div>
      </div>

      {/* Special Offers */}
      <div className="mb-8 bg-gradient-to-r from-green-50 to-blue-50 rounded-xl p-6">
        <div className="flex items-center justify-between">
          <div>
            <h3 className="text-xl font-semibold text-gray-900 mb-2">
              üî• –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏
            </h3>
            <p className="text-gray-600">
              –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è!
            </p>
          </div>
          <Button className="bg-blue-600 hover:bg-blue-700">
            –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ
          </Button>
        </div>
      </div>

      {/* Products Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {mockProducts.map((product) => (
          <Card
            key={product.id}
            className="group hover:shadow-lg transition-shadow duration-200 border-gray-100"
          >
            <CardContent className="p-4">
              <div className="relative mb-4">
                <img
                  src={product.image}
                  alt={product.name}
                  className="w-full h-48 object-cover rounded-lg bg-gray-100"
                />
                <div className="absolute top-2 left-2 flex gap-2">
                  {product.isNew && (
                    <Badge className="bg-green-500 hover:bg-green-600">
                      –ù–û–í–ò–ù–ö–ê
                    </Badge>
                  )}
                  {product.discount && (
                    <Badge variant="destructive">-{product.discount}%</Badge>
                  )}
                </div>
              </div>

              <div className="space-y-2">
                <p className="text-sm text-gray-500">{product.category}</p>
                <h3 className="font-semibold text-gray-900 line-clamp-2">
                  {product.name}
                </h3>

                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-2">
                    {product.discount ? (
                      <>
                        <span className="text-lg font-bold text-gray-900">
                          {Math.round(
                            product.price * (1 - product.discount / 100),
                          )}{" "}
                          ‚ÇΩ
                        </span>
                        <span className="text-sm text-gray-400 line-through">
                          {product.price} ‚ÇΩ
                        </span>
                      </>
                    ) : (
                      <span className="text-lg font-bold text-gray-900">
                        {product.price} ‚ÇΩ
                      </span>
                    )}
                  </div>
                </div>

                <Button
                  onClick={() => onAddToCart(product)}
                  className="w-full mt-4 bg-blue-600 hover:bg-blue-700"
                >
                  <Icon name="Plus" size={16} className="mr-2" />–í –∫–æ—Ä–∑–∏–Ω—É
                </Button>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  );
};

export default ProductGrid;
